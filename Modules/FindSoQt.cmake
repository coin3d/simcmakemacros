SET(SOQTDIR $ENV{SOQTDIR})

# If $SOQTDIR hasn't been set, try $COINDIR
IF(NOT SOQTDIR)
  SET(COINDIR $ENV{COINDIR})
  IF(COINDIR)
    SET(SOQTDIR ${COINDIR})
  ENDIF(COINDIR)
ENDIF(NOT SOQTDIR)

SET(SoQt_NAMES SoQt SoQt1)
SET(SoQt_NAMES_DEBUG SoQtd SoQt1d)

IF(SOQTDIR)
  # Look for SoQt in environment variable SOQTDIR/COINDIR
  FIND_PATH(SoQt_INCLUDE_DIR Inventor/Qt/SoQt.h PATHS ${SOQTDIR} PATH_SUFFIXES include src .)
  FIND_LIBRARY(SoQt_LIBRARY_RELEASE NAMES ${SoQt_NAMES} PATHS ${SOQTDIR} PATH_SUFFIXES src "src/Inventor/Qt" bin lib .)
  FIND_LIBRARY(SoQt_LIBRARY_DEBUG NAMES ${SoQt_NAMES_DEBUG} PATHS ${SOQTDIR} PATH_SUFFIXES src "src/Inventor/Qt" bin lib .)
ELSE(SOQTDIR)
  # Automatic find
  FIND_PATH(SoQt_INCLUDE_DIR Inventor/Qt/SoQt.h)
  FIND_LIBRARY(SoQt_LIBRARY_RELEASE NAMES ${SoQt_NAMES})
  FIND_LIBRARY(SoQt_LIBRARY_DEBUG NAMES ${SoQt_NAMES_DEBUG})
ENDIF()

IF(SoQt_LIBRARY_RELEASE AND NOT SoQt_LIBRARY_DEBUG)
  SET(SoQt_LIBRARY_DEBUG ${SoQt_LIBRARY_RELEASE})
  SET(SoQt_LIBRARY       ${SoQt_LIBRARY_RELEASE})
  SET(SoQt_LIBRARIES     ${SoQt_LIBRARY_RELEASE})
ENDIF(SoQt_LIBRARY_RELEASE AND NOT SoQt_LIBRARY_DEBUG)

IF(SoQt_LIBRARY_DEBUG AND NOT SoQt_LIBRARY_RELEASE)
  SET(SoQt_LIBRARY_RELEASE ${SoQt_LIBRARY_DEBUG})
  SET(SoQt_LIBRARY       ${SoQt_LIBRARY_DEBUG})
  SET(SoQt_LIBRARIES     ${SoQt_LIBRARY_DEBUG})
ENDIF(SoQt_LIBRARY_DEBUG AND NOT SoQt_LIBRARY_RELEASE)

IF(SoQt_LIBRARY_DEBUG AND SoQt_LIBRARY_RELEASE)
  IF(CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE)
    #If the generator supports configuration types then set
    #optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value
    SET(SoQt_LIBRARY optimized ${SoQt_LIBRARY_RELEASE} debug ${SoQt_LIBRARY_DEBUG})
  ELSE(CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE)
    MESSAGE(STATUS 5)
    #If there are no configuration types and CMAKE_BUILD_TYPE has no value
    #then just use the release libraries
    SET(SoQt_LIBRARY ${SoQt_LIBRARY_RELEASE})
  ENDIF(CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE)
  SET(SoQt_LIBRARIES optimized ${SoQt_LIBRARY_RELEASE} debug ${SoQt_LIBRARY_DEBUG})
ENDIF(SoQt_LIBRARY_DEBUG AND SoQt_LIBRARY_RELEASE)  

SET(SoQt_LIBRARY ${SoQt_LIBRARY} CACHE FILEPATH "The SoQt library")
MARK_AS_ADVANCED(SoQt_LIBRARY_RELEASE SoQt_LIBRARY_DEBUG)

IF (SoQt_INCLUDE_DIR AND SoQt_LIBRARY)
   SET(SoQt_FOUND TRUE)
ENDIF (SoQt_INCLUDE_DIR AND SoQt_LIBRARY)

IF (SoQt_FOUND)
  IF (NOT SoQt_FIND_QUIETLY)
    MESSAGE(STATUS "Found SoQt: ${SoQt_LIBRARY}")
  ENDIF (NOT SoQt_FIND_QUIETLY)
ELSE (SoQt_FOUND)
  IF (SoQt_FIND_REQUIRED)
    IF(SOQTDIR)
      MESSAGE(FATAL_ERROR "Could not find SoQt in ${SOQTDIR}.")
    ELSE(SOQTDIR)
      MESSAGE(FATAL_ERROR "Could not find SoQt. Try setting the SOQTDIR environment variable.")
    ENDIF(SOQTDIR)
  ENDIF (SoQt_FIND_REQUIRED)
ENDIF (SoQt_FOUND)

# SoQt_DEFINES - only on WIN32
IF (SoQt_FOUND AND WIN32)
  FIND_FILE(SoQt_pc NAMES SoQt.pc PATHS ${SoQt_INCLUDE_DIR}/../ PATH_SUFFIXES . lib/pkgconfig/ NO_DEFAULT_PATH)
  MARK_AS_ADVANCED(SoQt_pc)
  IF(EXISTS ${SoQt_pc})
    FILE(READ ${SoQt_pc} SoQtPC)
    IF (${SoQtPC} MATCHES SOQT_DLL)
      MESSAGE(STATUS "Found SoQt.pc with -DSOQT_DLL")
      SET(SoQt_DEFINES -DSOQT_DLL)
    ELSE()
      MESSAGE(STATUS "Found SoQt.pc with -DSOQT_NOT_DLL")
      SET(SoQt_DEFINES -DSOQT_NOT_DLL)
    ENDIF()
  ELSE()
    MESSAGE(STATUS "WARNING: Could not find SoQt.pc, using -DSOQT_DLL. This may be wrong though...")
    # Cross your fingers...
    SET(SoQt_DEFINES -DSOQT_DLL)
  ENDIF()
ENDIF()
